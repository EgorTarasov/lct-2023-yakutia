"""tracking

Revision ID: 021
Revises: 020
Create Date: 2023-12-17 23:49:28.968646

"""
from typing import Optional, Sequence

import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision: str = "021"
down_revision: Optional[str] = "020"
branch_labels: Optional[Sequence[str]] = None
depends_on: Optional[Sequence[str]] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "profession_recomendations",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("profession_id", sa.Integer(), nullable=False),
        sa.Column("rating", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["profession_id"],
            ["vk_users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["vk_users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "profession_id"),
    )
    op.create_table(
        "profession_visits",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("profession_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["profession_id"],
            ["vk_users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["vk_users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "profession_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("profession_visits")
    op.drop_table("profession_recomendations")
    # ### end Alembic commands ###
