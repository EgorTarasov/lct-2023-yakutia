"""embedding

Revision ID: 009
Revises: 008
Create Date: 2023-12-17 13:05:18.629589

"""
from typing import Optional, Sequence

import sqlalchemy as sa
from alembic import op

from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "009"
down_revision: Optional[str] = "008"
branch_labels: Optional[Sequence[str]] = None
depends_on: Optional[Sequence[str]] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "profession_embeddings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "embeddings",
            postgresql.ARRAY(sa.NUMERIC(precision=53, asdecimal=False)),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["professions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("profession_embeddingss")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "profession_embeddingss",
        sa.Column("id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "embeddings",
            postgresql.ARRAY(sa.NUMERIC(precision=53, scale=0)),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["id"], ["professions.id"], name="profession_embeddingss_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="profession_embeddingss_pkey"),
    )
    op.drop_table("profession_embeddings")
    # ### end Alembic commands ###
